// Generated by CoffeeScript 1.7.1
(function() {
  var AppConfig;

  angular.module('BookStore', ['ngResource', 'ngRoute', 'ngCookies', 'ngSanitize']).config(AppConfig = (function() {
    AppConfig.$inject = ['$routeProvider', '$locationProvider', '$httpProvider'];

    function AppConfig($routeProvider, $locationProvider, $httpProvider) {
      $routeProvider.when('/', {
        controller: 'HomeCtrl as home',
        templateUrl: '/partials/home.html'
      }).when('/login', {
        controller: 'LoginCtrl as login',
        templateUrl: '/partials/login.html'
      }).when('/signup', {
        controller: 'SignUpCtrl as signup',
        templateUrl: '/partials/signup.html'
      }).when('/books/:bookId', {
        controller: 'BookDetailCtrl as detail',
        templateUrl: '/partials/book-detail.html'
      }).when('/books', {
        controller: 'BookIndexCtrl as index',
        templateUrl: '/partials/book-index.html'
      }).when('/error/404', {
        templateUrl: '/partials/error-404.html'
      }).otherwise({
        redirectTo: '/error/404'
      });
      $locationProvider.html5Mode(true);
      $httpProvider.interceptors.push([
        '$q', '$location', '$rootScope', function($q, $location, $rootScope) {
          return {
            responseError: function(resp) {
              if (resp.status === 401 || resp.status === 403) {
                $location.path('/login');
              }
              return $q.reject(resp);
            },
            request: function(config) {
              var apiPath, _ref;
              apiPath = "" + window.api_host + "/api/";
              if ((((_ref = $rootScope.user) != null ? _ref.email : void 0) != null) && config.url.indexOf(apiPath) === 0) {
                config.headers['X-AUTH-USERNAME'] = $rootScope.user.email;
                config.headers['X-AUTH-TOKEN'] = $rootScope.user.password;
                config.headers['X-AUTH-HASHED'] = 'true';
                console.log('Append header for api request');
              }
              return config;
            }
          };
        }
      ]);
    }

    return AppConfig;

  })());

}).call(this);
